{
  "name": "DannyTrades",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -1600,
        144
      ],
      "id": "048ac99f-1f63-4aa4-a3c3-ae40213cee02",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "text": "=You are a data extraction and orgnization agent. You will be given the raw content of an email that contains stock-related data. Your task is to parse the text, extract relevant information for each stock mentioned, and structure it into valid JSON based on the schema provided below.\n\n\nImportant Rules:\n - Pay close attention what red and yellow candles are mantioned\n - Provide concise summary with the most important points in the misc section of each stock.\n - Dont provide any data that does not exsist.\n - Determine the bulishnesh level of each stock from the provided context. There can only be one value, Hot or Extreme Bulish. Never provide both values. Pay attention to the following signs to determine the bulishness level:\n  - Extreme Bulish (multiple signs) such as: Red Candle in Force,  successfully broke through the critical resistance, closed above the upper boundary of the volatility hole, red candles on all time frames, Emerging Red Ribbons, MACD Golden Cross\n  - Hot (single sign) - Hot stock, Red Candle\n- When updating hot / Extreme bulish indicators - pay attention if the stock is expiriencing a downtrend or have multiple yellow candles on multiple time frames. Such stocks should not be tagged at all.\n - Provide only the most imporant support and resistance levels. Each stock should not have more than 3 support and ressitance levels.\nEach stock should be represented by a JSON object using its symbol (e.g., AMD, NVDA) as the symbol field.\n\nOnly include fields if data is explicitly present. Do not invent or hallucinate values.\n\nOutput a single JSON object structured as follows:\n{\n  \"stocks\": [\n    {\n      \"symbol\": \"string\",\n      \"ticker_name\": \"string\",\n      \"volatility_hole\": \"string\",\n      \"red_candle\": {\n        \"daily\": \"boolean\",\n        \"weekly\": \"boolean\",\n        \"monthly\": \"boolean\"\n      },\n      \"yellow_candle\": {\n        \"daily\": \"boolean\",\n        \"weekly\": \"boolean\",\n        \"monthly\": \"boolean\"\n      },\n      \"whale_accumulation\": {\n        \"daily\": \"string\",\n        \"weekly\": \"string\",\n        \"monthly\": \"string\"\n      },\n      \"technical_indicators\": {\n        \"support_levels\": [\n          \"number\"\n        ],\n        \"resistance_levels\": [\n          \"number\"\n        ]\n      },\n  {\n    \"Bulish Level\": [\"Extreme Bulish\", \"Hot\"]\n    },\n    {\n      \"misc_data\": \"string\",\n      \"patreon_link\": \"string\"\n    }\n  ]\n}\n\nExample 1 Expected Output:\n{\n  \"stocks\": [\n    {\n      \"symbol\": \"DUOL\",\n      \"volatility_hole\": \"closed below the lower boundary of the last volatility hole at $489\",\n      \"yellow_candle\": {\n        \"daily\": true\n      },\n      \"whale_accumulation\": {\n        \"daily\": \"decreased to 65.6%\"\n      },\n      \"technical_indicators\": {\n        \"support_levels\": [435, 450, 465, 472],\n        \"resistance_levels\": [480, 488, 493, 500]\n      },\n      \"misc_data\": \"On the daily chart, DUOL has closed below the lower boundary of the last volatility hole at $489 and so more downside would be expected. The last yellow candle remains in force. For the uptrend to resume, a daily close above $540.3 is needed while closing below $510.88 would trigger a deeper pullback, which DUOL is experiencing currently. The pullback continues. Closing Price: $474.9 Technical Indicators: MACD and RSI are slightly curling down.\"\n    },\n      \"patreon_link\": \"https://www.patreon.com/post/id54627\",\n    {\n      \"symbol\": \"SPOT\",\n      \"red_candle\": {\n        \"daily\": true,\n        \"weekly\": true,\n        \"monthly\": true\n      },\n      \"whale_accumulation\": {\n        \"daily\": \"increased to 84.9%\"\n      },\n      \"technical_indicators\": {\n        \"support_levels\": [672, 680, 700],\n        \"resistance_levels\": [718, 723, 750]\n      },\n     \"Bulish Level\": [\"Extreme Bulish\"],\n\n      \"misc_data\": \"SPOT is among the most bullish stocks, displaying bullish red candles across all timeframes, supported by strong technical indicators and robust whale accumulation. The $680.00 level would act as a temporary support level, while $718.00 would serve as a resistance level. It is expected that SPOT remains range-bound between these two price levels before a potential breakout if whale accumulation remains steady and strong. Closing Price: $715.57 Technical Indicators: MACD and RSI are flattening with slight upward curls.\",\n\"patreon_link\": \"https://www.patreon.com/post/id123\",\n    }\n  ]\n}\n\nExample 2 Expected Output:\n{\n  \"stocks\": [\n    {\n      \"symbol\": \"TMDX\",\n      \"red_candle\": {\n        \"daily\": true,\n        \"weekly\": true\n      },\n      \"whale_accumulation\": {\n        \"daily\": \"decreased to 92.19%\"\n      },\n      \"technical_indicators\": {\n        \"support_levels\": [128, 135, 138],\n        \"resistance_levels\": [142, 145, 150]\n      },\n      \"misc_data\": \"The red candles from both daily and weekly charts remain in force, unless there is a daily close below $128.3 and a weekly close below $111.8. The uptrend is accelerating, with $145 as the next critical resistance level. Closing Price: $141.96 Technical Indicators: MACD and RSI are flattening with slight downward curls.\",\n    \"patreon_link\": \"https://www.patreon.com/post/id123456\",\n    {\n      \"symbol\": \"GRAB\",\n      \"volatility_hole\": \"closed below the lower boundary of the volatility hole at $4.80\",\n      \"yellow_candle\": {\n        \"daily\": true\n      },\n      \"whale_accumulation\": {\n        \"daily\": \"increased to 15.69%\"\n      },\n    {\n      \"technical_indicators\": {\n        \"support_levels\": [4.2, 4.5],\n        \"resistance_levels\": [4.85, 4.95, 5.2]\n    }\n      \"misc_data\": \"On the daily chart, GRAB closed below the lower boundary of the volatility hole at $4.80, triggering the recent drop to $4.53 Meanwhile, the last yellow candle from June 10 remains valid. For the uptrend to resume, GRAB must close above $4.97 on a daily basis. Conversely, a daily close below $4.65 could trigger a deeper pullback. The downtrend persists. Closing Price: $4.71 Technical Indicators: MACD is flattening while RSI is curling up.\",\n        \"patreon_link\": \"https://www.patreon.com/post/id123456\"\n    }\n  ]\n}\n\n\nEmail data:\n{{ $json.emailBlob }}",
        "schemaType": "manual",
        "inputSchema": "{\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"title\": \"StockEmailExtraction\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"stocks\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"symbol\": { \"type\": \"string\" },\n          \"ticker_name\": { \"type\": \"string\" },\n          \"volatility_hole\": { \"type\": \"string\" },\n          \"red_candle\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"daily\": { \"type\": \"boolean\" },\n              \"weekly\": { \"type\": \"boolean\" },\n              \"monthly\": { \"type\": \"boolean\" }\n            },\n            \"additionalProperties\": false\n          },\n          \"yellow_candle\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"daily\": { \"type\": \"boolean\" },\n              \"weekly\": { \"type\": \"boolean\" },\n              \"monthly\": { \"type\": \"boolean\" }\n            },\n            \"additionalProperties\": false\n          },\n          \"whale_accumulation\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"daily\": { \"type\": \"string\" },\n              \"weekly\": { \"type\": \"string\" },\n              \"monthly\": { \"type\": \"string\" }\n            },\n            \"additionalProperties\": false\n          },\n          \"technical_indicators\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"support_levels\": {\n                \"type\": \"array\",\n                \"items\": { \"type\": \"number\" }\n              },\n              \"resistance_levels\": {\n                \"type\": \"array\",\n                \"items\": { \"type\": \"number\" }\n              }\n            },\n            \"required\": [],\n            \"additionalProperties\": false\n          },\n          \"misc_data\": { \"type\": \"string\" },\n          \"patreon_link\": { \"type\": \"string\", \"format\": \"uri\" },\n          \"bullishness_signal\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"enum\": [\"Extreme Bullish\", \"Hot\"]\n            }\n          }\n        },\n        \"required\": [\"symbol\"],\n        \"additionalProperties\": false\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"required\": [\"stocks\"],\n  \"additionalProperties\": false\n}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1.1,
      "position": [
        912,
        320
      ],
      "id": "efe85a7a-1663-4d81-b3c7-64c89a28e576",
      "name": "Information Extractor"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash-preview-05-20",
        "options": {
          "temperature": 0.4
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        784,
        864
      ],
      "id": "74d2c239-c16e-47d6-b3dc-b282ba13ace2",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "podwUUSWMoXtgwL6",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an **expert Notion Stock Database Agent**. Your role is to maintain the Notion database (ID: `20ef056c191c80068fd5f728fee3bda0`) in a way that ensures high precision, accuracy, and contextual completeness of stock entries.\n\nYou will receive a structured JSON stock object. Your task is to **either create a new stock entry or update an existing one**, using smart logic that preserves relevant existing data, merges when partial data is received, and fully replaces when input data is complete and more relevant.\n\n---\n\n### 📍 Step 1: Identify the Stock\n\nUse `API-post-database-query` to locate the existing stock entry by comparing the input `\"symbol\"` with the `\"Stock Ticker\"` property in the database.\n\n```json\n{\n  \"database_id\": \"20ef056c191c80068fd5f728fee3bda0\",\n  \"filter\": {\n    \"property\": \"Stock Ticker\",\n    \"title\": {\n      \"equals\": \"symbol\"\n    }\n  }\n}\n```\n\n---\n\n### 🔄 Step 2: Update Existing Stock Entry\n\nIf a page is found:\n\n1. Extract its `page_id`.\n2. Use the `API-patch-page` to update only the relevant fields.\n3. Apply intelligent update rules:\n\n- **If input data is complete and clearly more relevant**, **replace** existing values.\n- **If input is partial**, **merge** with existing values. Do not drop prior context unless it is explicitly outdated or irrelevant.\n- When merging insights (e.g. red candles, summaries), **combine both new and existing data** to preserve full understanding.\n- Output should always be **more informative than before**.\n\n#### Example Tool Payload:\n```json\n{\n  \"page_id\": \"PAGE_ID_OF_EXISTING_STOCK\",\n  \"properties\": {\n    \"Red/Yellow Candle\": {\n      \"multi_select\": [\n        { \"name\": \"Red-Daily\" },\n        { \"name\": \"Red-Weekly\" },\n        { \"name\": \"Red-Monthly\" },\n        { \"name\": \"Yellow-Daily\" },\n        { \"name\": \"Yellow-Weekly\" }\n      ]\n    },\n    \"Volatility Hole\": {\n      \"checkbox\": true\n    },\n    \"Whale Accumulation\": {\n      \"rich_text\": [\n        { \"text\": { \"content\": \"Combined whale accumulation insight...\" } }\n      ]\n    },\n    \"Important Details\": {\n      \"rich_text\": [\n        { \"text\": { \"content\": \"Merged summary of existing + new info\" } }\n      ]\n    },\n    \"Hot Stocks\": {\n      \"multi_select\": [\n        { \"name\": \"Hot\" },\n        { \"name\": \"Extreme Bullish\" },\n        { \"name\": \"Bearish\" }\n      ]\n    },\n    \"Link\": {\n      \"url\": \"https://example.com/patreon\"\n    },\n    \"Support/Resistance\": {\n      \"rich_text\": [\n        { \"text\": { \"content\": \"Support Levels: 101, Resistance Levels: 120\" } }\n      ]\n    }\n  }\n}\n```\n\n---\n\n### 🆕 Step 3: Create New Stock Entry\n\nIf no matching page is found, use the `API-post-page` tool to insert a new stock record.\n\n#### Tool Payload:\n```json\n{\n  \"parent\": { \"database_id\": \"20ef056c191c80068fd5f728fee3bda0\" },\n  \"properties\": {\n    \"Stock Ticker\": {\n      \"title\": [\n        { \"text\": { \"content\": \"SYMBOL\" } }\n      ]\n    },\n    \"Red/Yellow Candle\": {\n      \"multi_select\": [\n        { \"name\": \"Red-Daily\" },\n        { \"name\": \"Red-Weekly\" },\n        { \"name\": \"Red-Monthly\" },\n        { \"name\": \"Yellow-Daily\" },\n        { \"name\": \"Yellow-Weekly\" }\n      ]\n    },\n    \"Volatility Hole\": {\n      \"checkbox\": true\n    },\n    \"Whale Accumulation\": {\n      \"rich_text\": [\n        { \"text\": { \"content\": \"Whale accumulation text\" } }\n      ]\n    },\n    \"Important Details\": {\n      \"rich_text\": [\n        { \"text\": { \"content\": \"Stock summary and key observations\" } }\n      ]\n    },\n    \"Hot Stocks\": {\n      \"multi_select\": [\n        { \"name\": \"Hot\" },\n        { \"name\": \"Extreme Bullish\" },\n        { \"name\": \"Bearish\" }\n      ]\n    },\n    \"Support/Resistance\": {\n      \"rich_text\": [\n        { \"text\": { \"content\": \"Support Levels: X, Resistance Levels: Y\" } }\n      ]\n    },\n    \"Link\": {\n      \"url\": \"https://example.com/patreon\"\n    }\n  }\n}\n```\n\n---\n\n### 🧠 Field Mapping Logic\n\n| Notion Property         | Input Key(s)                          | Type         | Smart Update Strategy |\n|-------------------------|---------------------------------------|--------------|------------------------|\n| `Red/Yellow Candle`     | `red_candle`, `yellow_candle`         | Multi-select | Merge values unless new data fully replaces. |\n| `Volatility Hole`       | `volatility_hole`                     | Checkbox     | Set to `true` if present, else `false`. |\n| `Whale Accumulation`    | `whale_accumulation`                  | Rich Text    | Merge or replace based on insight completeness. |\n| `Hot Stocks`            | `hot_stocks`                          | Multi-select | Merge and deduplicate. |\n| `Important Details`     | `misc_data`                           | Rich Text    | Combine summaries. Prefer unified explanation. |\n| `Support/Resistance`    | `support_levels`, `resistance_levels` | Rich Text    | Format: `\"Support Levels: ..., Resistance Levels: ...\"` |\n| `Link`                  | `patreon_link`                        | URL          | Replace if newer or more complete. |\n\n---\n\n### ⚠️ Special Considerations\n\n- Do not blindly replace valuable data when input is **partial or vague**.\n- Be precise when merging — avoid duplicate or conflicting insights.\n- If existing data contains summaries, and new input does not mention those, **retain existing summaries**.\n- Always aim to produce a **comprehensive and updated snapshot** of the stock.\n\n---\n\n### 🔚 Final Step\n\nOnce updated or created, confirm the data integrity by checking for:\n\n- Missing critical fields\n- Improper formatting (e.g., empty select/multi-selects)\n- Overwritten context without justification\n\nNow process the following stock object:\n\n{{ JSON.stringify($json[\"output.stocks\"]) }}",
        "options": {
          "maxIterations": 1000
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        2928,
        352
      ],
      "id": "f5dae711-3471-46c8-ae09-825dcd7502df",
      "name": "AI Agent",
      "retryOnFail": true,
      "executeOnce": false,
      "waitBetweenTries": 5000,
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "amount": 30
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2544,
        240
      ],
      "id": "05debaa3-9a19-4ede-9d51-9b3fec71b22d",
      "name": "WaitforAgent",
      "webhookId": "7955e070-2601-41c7-8989-e1fd9aad264d"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-pro",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        2816,
        624
      ],
      "id": "7b2bf0b3-2e00-41a2-a3c5-670d8bf81e36",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "podwUUSWMoXtgwL6",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const allEmailText = [];\n\nfor (const item of $input.all()) {\n  // Assuming the plain text body is available in item.json.text\n  // You might need to adjust 'item.json.text' if your Gmail node output differs\n  if (item.json.text) {\n    allEmailText.push(item.json.text);\n  }\n}\n\n// Join all extracted text into a single string, separated by newlines\nconst emailBlob = allEmailText.join('\\n\\n---\\n\\n'); // Add a separator for clarity\n\nreturn [\n  {\n    json: {\n      emailBlob: emailBlob\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -128,
        288
      ],
      "id": "1ff8ffb3-f6d9-4d69-a2bb-ecf0c515b99f",
      "name": "AppendAllEmails"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        2848,
        912
      ],
      "id": "735be69a-2f43-497b-a32e-cb939ff3773e",
      "name": "ListTools",
      "credentials": {
        "mcpClientApi": {
          "id": "U98YzjtKKH2RcRpA",
          "name": "MCP Client (STDIO) account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeTool",
        "toolName": "={{ $fromAI(\"tool\", \"the selected tool to use\") }}",
        "toolParameters": "={{ $fromAI('Tool_Parameters', ``, 'json') }}"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        3200,
        800
      ],
      "id": "208c713b-3dae-4904-bdfa-886b63a2301e",
      "name": "NotionMCP",
      "credentials": {
        "mcpClientApi": {
          "id": "U98YzjtKKH2RcRpA",
          "name": "MCP Client (STDIO) account"
        }
      }
    },
    {
      "parameters": {
        "resource": "message",
        "operation": "getAll",
        "returnAll": true,
        "additionalFields": {
          "labelIds": [
            "Label_5958665196974924851"
          ]
        }
      },
      "id": "6cb555d8-9357-402b-b25f-5d04078ea479",
      "name": "Gmail - Get Many",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 1,
      "position": [
        -1248,
        912
      ],
      "credentials": {
        "gmailOAuth2": {
          "id": "P8u6tRpw4g0u0dai",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {},
      "id": "07fc95dc-7633-4d3a-9198-2973394fa907",
      "name": "Function",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        -784,
        944
      ]
    },
    {
      "parameters": {
        "resource": "message",
        "operation": "delete",
        "messageId": "={{$json.id}}"
      },
      "id": "79c94a9c-0ed1-4760-aad9-702e87be1d1c",
      "name": "Gmail - Delete",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 1,
      "position": [
        -464,
        928
      ],
      "credentials": {
        "gmailOAuth2": {
          "id": "P8u6tRpw4g0u0dai",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "30 9 * * *"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1680,
        448
      ],
      "id": "012eba43-7ce0-41bc-a097-52bc9c8136b3",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1744,
        912
      ],
      "id": "6b471409-9f39-479c-b46b-a431c772bd8f",
      "name": "Schedule Trigger1"
    },
    {
      "parameters": {
        "content": "## Workflow Triggers & Initial Email Fetch 📧\n\nThis section handles the initiation of the workflow. It can be triggered manually or on a schedule.\n\n-   **Manual Trigger**: Allows you to start the workflow manually for testing or immediate execution.\n-   **Schedule Trigger**: Automatically runs the workflow at predefined times (e.g., daily at 9:30 AM and 11:30 PM).\n-   **Gmail Nodes**: Fetch emails from your Gmail account that have a specific label ('Label_5958665196974924851'). One path fetches a single email, and another can fetch multiple.",
        "height": 320,
        "width": 620,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1584,
        -240
      ],
      "name": "Workflow Triggers & Email Fetch",
      "id": "generated-797d77f2-ae23-4c6f-8361-a0116ced029e"
    },
    {
      "parameters": {
        "content": "## Email Content Aggregation 📦\n\nThis 'AppendAllEmails' Function node collects the plain text body from all incoming Gmail items and consolidates them into a single 'emailBlob' variable. This unified text is then passed on for further processing.",
        "width": 400,
        "color": 4
      },
      "name": "Email Content Aggregation",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -128,
        0
      ],
      "id": "generated-6a578d2f-9a0b-404c-9725-978e4c510869"
    },
    {
      "parameters": {
        "content": "## AI-Powered Information Extraction 🧠\n\nThe 'Information Extractor' node, powered by the 'Google Gemini Chat Model', is responsible for parsing the consolidated email content. It extracts structured stock-related data (e.g., stock symbols, candle types, volatility, whale accumulation, support/resistance levels, bullishness signals, and miscellaneous data) based on a detailed JSON schema. This ensures that only relevant and formatted data is passed to the next stage.",
        "height": 220,
        "width": 500,
        "color": 6
      },
      "name": "AI-Powered Information Extraction",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        912,
        64
      ],
      "id": "generated-4ffed66a-0803-4a73-abb8-fe27a2a9e8a5"
    },
    {
      "parameters": {
        "content": "## Notion Database Management & AI Agent 📊\n\nThis section orchestrates the update and creation of stock entries in your Notion database.\n\n-   **WaitforAgent**: Introduces a pause, allowing for potential manual intervention or ensuring prior steps are complete.\n-   **AI Agent**: This intelligent agent, leveraging another 'Google Gemini Chat Model' and specialized Notion tools ('ListTools', 'NotionMCP'), queries your Notion database to check for existing stock entries. If a stock exists, it updates the relevant properties (e.g., Red/Yellow Candle, Volatility Hole, Whale Accumulation, Hot Stocks, Important Details, Support/Resistance, and Link). If a stock is new, it creates a new page with the extracted information.",
        "height": 280,
        "width": 700
      },
      "name": "Notion Database Management & AI Agent",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1488,
        112
      ],
      "id": "generated-1f1b3dcd-bf6d-4ede-a67b-401a9921bddd"
    },
    {
      "parameters": {
        "content": "## Processed Email Deletion 🗑️\n\nThis branch of the workflow is dedicated to managing the emails after they have been processed. It fetches emails (similar to the initial trigger) and then uses a 'Function' node (currently configured with placeholder code) before passing the email IDs to the 'Gmail - Delete' node. This ensures that processed emails are removed from your inbox, keeping it tidy.",
        "height": 200,
        "width": 500,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "name": "Processed Email Deletion",
      "position": [
        -1248,
        656
      ],
      "id": "generated-372a6d60-6fe7-4212-a8de-d4de65514170"
    },
    {
      "parameters": {
        "operation": "getAll",
        "limit": 100,
        "simple": false,
        "filters": {
          "labelIds": [
            "Label_5958665196974924851"
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -784,
        304
      ],
      "id": "f45b66f3-1f78-409d-8780-8831a76a3257",
      "name": "Get many messages",
      "webhookId": "79d59fc9-c1c0-4eb9-9cee-287ca31c9ae1",
      "credentials": {
        "gmailOAuth2": {
          "id": "P8u6tRpw4g0u0dai",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        2128,
        320
      ],
      "id": "05652f87-6580-41ce-be23-3d6ac317bffb",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.stocks",
        "include": "allOtherFields",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1680,
        368
      ],
      "id": "77b69402-6679-4b15-8d6f-abf6e84e5b59",
      "name": "Split Out"
    }
  ],
  "pinData": {
    "Schedule Trigger": [
      {
        "json": {
          "timestamp": "2025-07-01T09:30:22.123+03:00",
          "Readable date": "July 1st 2025, 9:30:22 am",
          "Readable time": "9:30:22 am",
          "Day of week": "Tuesday",
          "Year": "2025",
          "Month": "July",
          "Day of month": "01",
          "Hour": "09",
          "Minute": "30",
          "Second": "22",
          "Timezone": "Asia/Jerusalem (UTC+03:00)"
        }
      }
    ]
  },
  "connections": {
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Get many messages",
            "type": "main",
            "index": 0
          },
          {
            "node": "Gmail - Get Many",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "WaitforAgent": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AppendAllEmails": {
      "main": [
        [
          {
            "node": "Information Extractor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ListTools": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "NotionMCP": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Gmail - Get Many": {
      "main": [
        [
          {
            "node": "Function",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function": {
      "main": [
        [
          {
            "node": "Gmail - Delete",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get many messages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger1": {
      "main": [
        [
          {
            "node": "Gmail - Get Many",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get many messages": {
      "main": [
        [
          {
            "node": "AppendAllEmails",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "WaitforAgent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "ba92eac6-42b1-4aca-aae4-4f270612bf27",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "f38697ed2607b5772e1a625fcad179aa4b009d699f6288f484e1368aa1d2a646"
  },
  "id": "vtqbBlxeGnj0JVXW",
  "tags": []
}